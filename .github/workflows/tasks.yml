name: Tasks

on:
  schedule:
    - cron: "15 7 * * *"
    - cron: "15 14,21 * * *"
    - cron: "0 16 * * 1"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  WIKIDATA_USERNAME: ${{ secrets.WIKIDATA_USERNAME }}
  TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}

jobs:
  tmdb:
    runs-on: ubuntu-latest
    if: github.event.schedule == '15 7 * * *' || github.event.schedule == '15 14,21 * * *' || github.event_name == 'workflow_dispatch'

    strategy:
      fail-fast: false
      matrix:
        property:
          - "P4947"
          - "P4985"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Load cache
        uses: actions/cache@v3
        with:
          path: .cache/
          key: cache-${{ github.job }}-${{ matrix.property }}-${{ github.run_id }}
          restore-keys: |
            cache-${{ github.job }}-${{ matrix.property }}-

      - name: Run script
        run: |
          set -o pipefail
          python "$PROPERTY_ID.py" | tee output.csv
        env:
          PROPERTY_ID: ${{ matrix.property }}

      - name: Submit QuickStatements batch
        env:
          QUICKSTATEMENTS_TOKEN: ${{ secrets.QUICKSTATEMENTS_TOKEN }}
        run: |
          python quickstatements.py --batchname TMDbIDs <output.csv

  itunes:
    runs-on: ubuntu-latest
    if: github.event.schedule == '15 7 * * *' || github.event.schedule == '15 14,21 * * *' || github.event_name == 'workflow_dispatch'

    strategy:
      fail-fast: false
      matrix:
        property:
          - "P6398"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Load cache
        uses: actions/cache@v3
        with:
          path: .cache/
          key: cache-${{ github.job }}-${{ matrix.property }}-${{ github.run_id }}
          restore-keys: |
            cache-${{ github.job }}-${{ matrix.property }}-

      - name: Run script
        run: |
          set -o pipefail
          python "$PROPERTY_ID.py" | tee output.csv
        env:
          PROPERTY_ID: ${{ matrix.property }}

      - name: Submit QuickStatements batch
        env:
          QUICKSTATEMENTS_TOKEN: ${{ secrets.QUICKSTATEMENTS_TOKEN }}
        run: |
          python quickstatements.py --batchname iTunesIDs <output.csv

  appletv:
    runs-on: ubuntu-latest
    if: github.event.schedule == '15 7 * * *' || github.event.schedule == '15 14,21 * * *' || github.event_name == 'workflow_dispatch'

    strategy:
      fail-fast: false
      matrix:
        property:
          - "P9586"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Load cache
        uses: actions/cache@v3
        with:
          path: .cache/
          key: cache-${{ github.job }}-${{ matrix.property }}-${{ github.run_id }}
          restore-keys: |
            cache-${{ github.job }}-${{ matrix.property }}-

      - name: Run script
        run: |
          set -o pipefail
          python "$PROPERTY_ID.py" | tee output.csv
        env:
          PROPERTY_ID: ${{ matrix.property }}

      - name: Submit QuickStatements batch
        env:
          QUICKSTATEMENTS_TOKEN: ${{ secrets.QUICKSTATEMENTS_TOKEN }}
        run: |
          python quickstatements.py --batchname AppleTVIDs <output.csv

  pywikibot:
    runs-on: ubuntu-latest
    if: github.event.schedule == '15 7 * * *' || github.event_name == 'workflow_dispatch'

    strategy:
      fail-fast: false
      matrix:
        property:
          - "P444_Q21039459"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Load cache
        uses: actions/cache@v3
        with:
          path: .cache/
          key: cache-${{ github.job }}-${{ matrix.property }}-${{ github.run_id }}
          restore-keys: |
            cache-${{ github.job }}-${{ matrix.property }}-

      - name: Login
        env:
          WIKIDATA_PASSWORD: ${{ secrets.WIKIDATA_PASSWORD }}
        run: |
          python pwb.py login

      - name: Run script
        run: |
          python "$PROPERTY_ID.py"
        env:
          RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
          PROPERTY_ID: ${{ matrix.property }}

  rdf_patch:
    runs-on: ubuntu-latest
    concurrency: rdf_patch_${{ matrix.property }}
    if: github.event.schedule == '15 7 * * *' || github.event.schedule == '15 14,21 * * *' || github.event_name == 'workflow_dispatch'

    strategy:
      fail-fast: false
      matrix:
        property:
          - "not_found_P6398"
          - "not_found_P9586"
          - "P4983"

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Load cache
        uses: actions/cache@v3
        with:
          path: .cache/
          key: cache-${{ github.job }}-${{ matrix.property }}-${{ github.run_id }}
          restore-keys: |
            cache-${{ github.job }}-${{ matrix.property }}-

      - name: Run script
        run: |
          set -o pipefail
          python "$PROPERTY_ID.py" | tee output.ttl
        env:
          PROPERTY_ID: ${{ matrix.property }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rdf_patch_${{ matrix.property }}_ttl
          path: |
            *.ttl
          retention-days: 7

  not_found_tmdb:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 16 * * 1' || github.event_name == 'workflow_dispatch'

    strategy:
      fail-fast: false
      matrix:
        include:
          - tmdb_type: "movie"
          - tmdb_type: "tv"
          - tmdb_type: "person"

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run script
        shell: bash
        run: |
          python not_found_tmdb.py "$TMDB_TYPE" | tee not_found_tmdb.ttl
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          TMDB_TYPE: ${{ matrix.tmdb_type }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: not_found_tmdb_${{ matrix.tmdb_type }}_ttl
          path: |
            *.ttl
          retention-days: 7

  upload_rdf_patch:
    needs: [rdf_patch, not_found_tmdb]
    runs-on: ubuntu-latest
    if: ${{ always() }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Combine artifacts
        run: find artifacts/ -name '*.ttl' -exec cat {} \; | tee patch.ttl

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Login
        env:
          WIKIDATA_PASSWORD: ${{ secrets.WIKIDATA_PASSWORD }}
        run: |
          python pwb.py login

      - name: Process RDF statements
        run: |
          python rdf_patch.py <patch.ttl
