name: Plex ETL

on:
  schedule:
    - cron: "0 15 * * *"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  WIKIDATA_USERNAME: ${{ secrets.WIKIDATA_USERNAME }}

jobs:
  wikidata:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Set Python path
        run: |
          echo "PYTHONPATH=$GITHUB_WORKSPACE" >>"$GITHUB_ENV"

      - name: Fetch Wikidata Plex GUIDs
        shell: python
        run: |
          from plex import wikidata_plex_guids

          wikidata_plex_guids().to_feather("plex_wikidata.arrow")

      - name: Print stats
        run: |
          python print_table_stats.py plex_wikidata.arrow

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wikidata
          path: |
            *.arrow
          retention-days: 7

  library:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Set Python path
        run: |
          echo "PYTHONPATH=$GITHUB_WORKSPACE" >>"$GITHUB_ENV"

      - name: Fetch Plex library GUIDs
        shell: python
        run: |
          import os

          from plex import plex_library_guids, plex_server

          server = plex_server(
              name=os.environ["PLEX_SERVER"],
              token=os.environ["PLEX_TOKEN"],
          )
          df = plex_library_guids(server["uri"], server["accessToken"])
          df.to_feather("plex_library.arrow")
        env:
          PLEX_TOKEN: ${{ secrets.PLEX_TOKEN }}
          PLEX_SERVER: ${{ secrets.PLEX_SERVER }}

      - name: Print stats
        run: |
          python print_table_stats.py plex_library.arrow

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: library
          path: |
            *.arrow
          retention-days: 7

  append_guids:
    needs: [library, wikidata]
    runs-on: ubuntu-latest
    concurrency: plex

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Set Python path
        run: |
          echo "PYTHONPATH=$GITHUB_WORKSPACE" >>"$GITHUB_ENV"

      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Download from S3
        run: |
          aws s3 cp "s3://wikidatabots/plex.arrow" "plex.arrow"
          cp plex.arrow plex.arrow~

      - name: Merge artifacts
        shell: python
        run: |
          from glob import glob

          import pandas as pd

          from pandas_utils import df_append_new

          df = pd.read_feather("plex.arrow")

          for fn in glob("artifacts/**/*.arrow", recursive=True):
              df = df_append_new(df, pd.read_feather(fn), on="guid")

          df = df.sort_values("guid").reset_index(drop=True)
          df.to_feather("plex.arrow")

      - name: Print stats
        run: |
          python print_table_stats.py plex.arrow

      - name: Print diff
        run: |
          python print_table_diff.py plex.arrow~ plex.arrow guid

      - name: Upload to S3
        run: |
          aws s3 cp "plex.arrow" "s3://wikidatabots/plex.arrow"
