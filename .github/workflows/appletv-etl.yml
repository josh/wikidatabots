name: Apple TV ETL

on:
  schedule:
    - cron: "0 16 * * 1"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  run:
    runs-on: ubuntu-latest
    concurrency: appletv_${{ matrix.type }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - type: "movie"
          - type: "show"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - uses: astral-sh/setup-uv@v1

      - name: Install dependencies
        run: |
          uv pip install --system --requirement requirements.txt

      - name: Download from S3
        run: |
          aws s3 cp --region us-east-1 --no-sign-request "s3://wikidatabots/appletv/${TYPE}.parquet" "appletv.parquet"
        env:
          TYPE: ${{ matrix.type }}

      - name: Run script
        run: |
          python appletv_etl.py "$TYPE"
        env:
          TYPE: ${{ matrix.type }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        if: github.ref == 'refs/heads/main'
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Upload to S3
        if: github.ref == 'refs/heads/main'
        run: |
          aws s3 cp --acl public-read "appletv.parquet" "s3://wikidatabots/appletv/${TYPE}.parquet"
        env:
          TYPE: ${{ matrix.type }}
